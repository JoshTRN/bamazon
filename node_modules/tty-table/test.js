let q = function(){};
q.get = function(){
  return "Got it!"
}
console.log(q.get());
process.exit();











const _config = Symbol('config');

class classes1 extends Array{
  constructor(){
    super();
  }
  getConfig(){
    return this[_config];
  }
  setConfig(args){
    this[_config] = args;
  }
}

let p = new classes1();
p.push([1,2,3,4],[23,10,0,1]);
p.setConfig({
  person: 'hiawatha'
});

console.log(p.getConfig());
console.log(p.slice(0));
console.log(p);
console.log('----');

function faktory(){
  let functions0 = function(){
    this.prototype = Array();
  };

  functions0.prototype.setConfig = function(object){
    functions0.prototype.config = object;
  }

  functions0.prototype.getConfig = function(){
    return functions0.prototype.config;
  }

  let obj1 = new functions0();
  obj1.setConfig({
    person: "hiawatha"
  });
  return obj1;
}

let fak1 = faktory();
console.log(fak1.getConfig());
console.log(fak1.hasOwnProperty('config'));
console.log(fak1.hasOwnProperty('setConig'));
fak1.push([1,2,3],[22,33,11]);
console.log(fak1.slice(0));
console.log(fak1);
console.log('00000000');
console.log(fak1.config);
console.log('00000000');

let fak2 = faktory();
console.log(fak2.getConfig());
console.log(fak2.hasOwnProperty('config'));
console.log(fak2.hasOwnProperty('setConig'));
console.log(fak2.slice(0));
console.log(fak2);
